Архитектура приложения

Приложение реализуется с помощью концепции MVC. Класс Router анализирует адресную строку и подключает нужный контроллер(класс) и нужный метод «action» в нем.
Внутри метода «action» мы в подключаем нужные «Model», в которых описаны методы предназначенные что бы подготовить нужные данные, необходимые для отображение «view». Вид подключается в нашем методе «action». Таким образом мы отображаем нужную страницу с нужными нам данными. 
Сортировка и поиск фильмов реализованы с помощью нужной выборки из нашей БД.
В БД мы имеем три таблицы : фильмов, актеров и таблицы посредника с помощью кокторой мы связываем фильмы и актеров. 
Используется связь многие ко многим.
Таблица-посредник у нас состоит из записей связи актера и фильма с помощью соответствующих «id». Для каждой связи используется отдельная запись. С помощью этой таблицы мы можем сделать выборку «id» актера что бы получить id «фильмов» в которых он снимался, потом мы делаем выборку в таблице фильмов по полученным «id». И получаем все фильмы в которых снялся актер. Так же можно получить всех актеров которые снимались в каком то фильме.
Такой способ связывание фильмов и актеров позволяет нам успешно делать поиск по актерам и добавление актеров в фильм.
     




Инструкция по запуску

Данное веб приложение создано для хранения информации о фильмах.
На главной странице отображается список фильмов. 
Что бы посмотреть более детальную информацию
нужно нажать на название нужного фильма. Далее что бы добавить фильм нужно нажать на кнопку "Add film".Появится форма для заполнения, каждое из полей
обязательно заполнить. После нажимаете кнопку подтверждения и если все хорошо, новый фильм добавится в общий список.
Внутри шапки сайта можно воспользоваться поиском фильмов по имени актера или же по названию фильма.
Также можно отсортировать фильмы в алфавитном порядке.


 Инструкция по развертыванию приложения

Что бы развернуть приложение понадобится удаленный хостинг с БД MySQL. Далее на сервере внутри корневой директории нужно создать директорию с именем «film». В даннуй директорию нужно скопировать файлы приложения(склонировать с github - https://github.com/paksli2/film).

Далее нужно поработать с БД. Для этого переходим в phpMyAdmin и создаем БД. Имя для БД можно использовать произвольное. Я буду использовать имя «mydatabase». Что бы создать БД ,находясь внутри phpMyAdmin, переходим на вкладку SQL. Там пишем следующую строку:
	СREATE DATABASE «mydatabase» DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci

Выполнив этот запрос, вы создатите БД с нужной для нас кодировкой utf8_general_ci.
Далее для того что бы подключить вашу БД переходим в директорию «film» на нашем сервере и ищем директорию с именем «config». Внутри создаем файл с именем «db_params.php»(обязательно это имя) и вставляем в этот файл следующий скрипт:



<?php

return array(
	'host' => '*',
	'dbname' => '*',
	'user' => '*',
	'password' => '*',
	'charset' => 'utf8'
); 

Вместо знака «*» пишем ваши данные для подключение БД.
Значение параметров:
host — имя вашего хостинга, например(mysql.zzz.com.ua);
dbname — имя БД , в нашем примере это «mydatabase»;
user — имя пользователя на который зарегестрирована БД;
password — пароль от БД;
charset — кодировка , оставляем как указано в примере выше;

После сохраняем файл. Еще раз убеждаемся что его путь (/film/config/db_params.php).

Возвращаемся к БД. Внутри нашей «mydatabase» создаем три таблицы:
1)  «actors»
2) «films»
3) «films2actors»

Называем таблицы как в примере выше(обязательно).

Параметры таблицы actors:

Имя таблицы:  «actors» (обязательно)
Тип таблицы: MyISAM
Сравнение: utf8

Создаем два столбца(id, name)
Параметры столбцов:

id 
тип: int
длинна значения:11
A_I :	ставим галочку
index: primary

name 
тип: varchar
длинна значения: 255


Сохраняем таблицу.
















Параметры таблицы films:

Имя таблицы:  «films» (обязательно)
Тип таблицы: MyISAM
Сравнение: utf8

Создаем четыре столбца(id, title, year, format)
Параметры столбцов:

id 
тип: int
длинна значения:11
A_I :	ставим галочку
index: primary

title 
тип: varchar
длинна значения:255

year
тип: int
длинна значения:11

format
тип: varchar
длинна значения:255

Сохраняем таблицу.





Параметры таблицы films2actors:

Имя таблицы:  «films2actors» (обязательно)
Тип таблицы: MyISAM
Сравнение: utf8

Создаем три столбца(id, film_id, actor_id)
Параметры столбцов:

id 
тип: int
длинна значения:11
A_I :	ставим галочку
index: primary

film_id 
тип: int
длинна значения:11

actor_id
тип: int
длинна значения:11

Сохраняем таблицу.

Далее можно запустить приложение по адресу:
http://adress/film/

adress — адрес вашего сайта.
